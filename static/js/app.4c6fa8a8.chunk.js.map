{"version":3,"sources":["src/utilities.ts","src/components/AnimatedPath.web.tsx","src/components/SvgMask.tsx","src/components/Modal.tsx","src/components/TourGuideProvider.tsx","src/hooks/useIsMounted.ts","src/hooks/useTourGuideController.tsx","App.tsx","src/components/style.ts","src/index.ts","src/components/TourGuideContext.ts","src/components/ConnectedStep.tsx","src/components/Step.tsx","src/components/Wrapper.tsx","src/components/TourGuideZone.tsx","src/components/TourGuideZoneByPosition.tsx","src/components/Button.tsx","src/components/Tooltip.tsx"],"names":["getPrevStep","steps","step","Object","values","filter","_step","order","reduce","a","b","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","getBorderRadiusOrDefault","borderRadius","defaultRadius","defaultSvgPath","size","position","radius","borderRadiusObject","borderRadiusTopRight","topRight","borderRadiusTopLeft","topLeft","borderRadiusBottomRight","bottomRight","borderRadiusBottomLeft","bottomLeft","x","y","circleSvgPath","Math","round","max","join","sizeOffset","maskOffset","positionOffset","getMaxSegmentLength","shape","getSplitPathSliceOne","splitPath","splitPathString","length","slice","getInterpolator","previousPath","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","AnimatedSvgPath","Path","IS_WEB","Platform","OS","SvgMask","props","mask","React","createRef","windowDimensions","getPath","state","animation","currentStep","to","interpolator","clamp","_value","svgMaskPathMorph","animationListener","d","rafID","requestAnimationFrame","current","setNativeProps","_touchableNode","setAttribute","animate","animations","Animated","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","start","result","finished","setState","setValue","handleLayout","nativeEvent","layout","width","height","canvasSize","select","android","Dimensions","get","default","firstPath","Value","listenerID","addListener","prevProps","this","removeListener","cancelAnimationFrame","dismissOnPress","stop","Wrapper","TouchableWithoutFeedback","View","style","onLayout","pointerEvents","onPress","undefined","ref","fill","backdropColor","strokeWidth","fillRule","Component","defaultProps","Easing","linear","Modal","tooltip","containerVisible","tooltipTranslateY","handleLayoutChange","handleNext","next","handlePrev","prev","handleStop","reset","renderMask","styles","overlayContainer","visible","__TEST__","Promise","resolve","setLayout","async","obj","top","left","measure","androidStatusBarVisible","StatusBar","currentHeight","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","bottom","right","maxWidth","verticalPosition","MARGIN","tooltipBottomOffset","translateAnim","delay","opacityAnim","keepTooltipPosition","floor","_animateMove","then","TooltipComponent","tooltipComponent","key","tooltipStyle","zIndex","transform","translateY","isFirstStep","isLastStep","labels","preventOutsideInteraction","StyleSheet","absoluteFill","nonInteractionPlaceholder","contentVisible","backgroundColor","container","renderNonInteractionPlaceholder","renderTooltip","elastic","Tooltip","isHorizontal","useMemo","useEffect","useState","useRef","TourGuideProvider","children","wrapperStyle","verticalOffset","startAtMount","tourKey","setTourKey","_default","updateVisible","setVisible","value","newVisible","updateCurrentStep","setSteps","canStart","setCanStart","startTries","mounted","isMounted","useIsMounted","eventEmitter","mitt","modal","emit","moveToCurrentStep","Array","isArray","entries","newObj","target","isNaN","animateMove","OFFSET_WIDTH","setCurrentStep","newStep","getFirstStep","utils","getLastStep","keys","forEach","_next","_prev","fromStep","TourGuideContext","Provider","registerStep","previousSteps","newSteps","name","unregisterStep","stepName","val","getCurrentStep","create","flex","useTourGuideController","_eventEmitter","_canStart","KeyedTourGuideZone","rest","KeyedTourGuideZoneByPosition","TourGuideZone","TourGuideZoneByPosition","AppContent","iconProps","color","on","console","log","off","zone","text","title","middleView","button","buttonText","source","uri","profilePhoto","row","absoluteFillObject","isTourGuide","alignItems","paddingTop","fontSize","textAlign","marginVertical","paddingVertical","paddingHorizontal","margin","padding","flexDirection","justifyContent","activeSwitchContainer","marginBottom","App","Z_INDEX","overflow","paddingBottom","tooltipText","tooltipContainer","bottomBar","marginTop","ConnectedStep","active","register","unregister","wrapper","context","warn","reject","_ox","_oy","copilot","Step","containerStyle","Button","Text","testID","TouchableOpacity","skip","previous","finish"],"mappings":"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","file":"static/js/app.4c6fa8a8.chunk.js","sourcesContent":["// @ts-ignore\nimport { interpolate, separate, splitPathString, toCircle } from 'flubber'\nimport clamp from 'lodash.clamp'\nimport memoize from 'memoize-one'\nimport {\n  BorderRadiusObject,\n  IStep,\n  Shape,\n  Steps,\n  SVGMaskPathMorphParam,\n  SvgPath,\n  ValueXY,\n} from './types'\n\nexport const getFirstStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: IStep): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: IStep): IStep | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: IStep,\n): IStep | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nconst getBorderRadiusOrDefault = (\n  borderRadius?: number,\n  defaultRadius: number = 0,\n) => (borderRadius || borderRadius === 0 ? borderRadius : defaultRadius)\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n  borderRadiusObject,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n  borderRadiusObject?: BorderRadiusObject\n}): SvgPath => {\n  if (radius || borderRadiusObject) {\n    const borderRadiusTopRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.topRight,\n      radius,\n    )\n    const borderRadiusTopLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.topLeft,\n      radius,\n    )\n    const borderRadiusBottomRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomRight,\n      radius,\n    )\n    const borderRadiusBottomLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomLeft,\n      radius,\n    )\n\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${borderRadiusTopRight},${borderRadiusTopRight} 0 0 1 ${borderRadiusTopRight},${borderRadiusTopRight}V${\n      position.y + size.y - borderRadiusTopRight\n    } a${borderRadiusBottomRight},${borderRadiusBottomRight} 0 0 1 -${borderRadiusBottomRight},${borderRadiusBottomRight}H${\n      position.x\n    } a${borderRadiusBottomLeft},${borderRadiusBottomLeft} 0 0 1 -${borderRadiusBottomLeft},-${borderRadiusBottomLeft}V${\n      position.y +\n      (borderRadiusBottomLeft > borderRadiusTopLeft\n        ? borderRadiusTopLeft\n        : borderRadiusBottomLeft)\n    } a${borderRadiusTopLeft},${borderRadiusTopLeft} 0 0 1 ${borderRadiusTopLeft},-${borderRadiusTopLeft}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.round(Math.max(size.x, size.y) / 2)\n  return [\n    `M${position.x - size.x / 8},${position.y + size.y / 2}`,\n    `a${radius} ${radius} 0 1 0 ${radius * 2} 0 ${radius} ${radius} 0 1 0-${\n      radius * 2\n    } 0`,\n  ].join('')\n}\n\nconst sizeOffset = memoize((size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size,\n)\n\nconst positionOffset = memoize((position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position,\n)\n\nconst getMaxSegmentLength = memoize((shape: Shape) => {\n  switch (shape) {\n    case 'circle':\n    case 'circle_and_keep':\n      return 7\n    case 'rectangle_and_keep':\n      return 25\n\n    default:\n      return 15\n  }\n})\n\nconst getSplitPathSliceOne = memoize((path: SvgPath) => {\n  const splitPath = splitPathString(path)\n  return splitPath.length > 1 ? splitPath.slice(1).join('') : path\n})\n\nconst getInterpolator = memoize(\n  (\n    previousPath: string,\n    shape: Shape,\n    position: ValueXY,\n    size: ValueXY,\n    maskOffset: number = 0,\n    borderRadius: number = 0,\n    borderRadiusObject?: BorderRadiusObject,\n  ) => {\n    const options = {\n      maxSegmentLength: getMaxSegmentLength(shape),\n    }\n    const optionsKeep = { single: true }\n    const getDefaultInterpolate = () =>\n      interpolate(\n        previousPath,\n        defaultSvgPath({\n          size: sizeOffset(size, maskOffset),\n          position: positionOffset(position, maskOffset),\n          borderRadius,\n          borderRadiusObject,\n        }),\n        options,\n      )\n    const getCircleInterpolator = () =>\n      toCircle(\n        previousPath,\n        position.x + size.x / 2,\n        position.y + size.y / 2,\n        Math.max(size.x, size.y) / 2 + maskOffset,\n        options,\n      )\n\n    switch (shape) {\n      case 'circle':\n        return getCircleInterpolator()\n      case 'rectangle':\n        return getDefaultInterpolate()\n      case 'circle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n          ],\n          optionsKeep,\n        )\n      }\n\n      case 'rectangle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            defaultSvgPath({\n              size: sizeOffset(size, maskOffset),\n              position: positionOffset(position, maskOffset),\n              borderRadius,\n              borderRadiusObject,\n            }),\n          ],\n          optionsKeep,\n        )\n      }\n      default:\n        return getDefaultInterpolate()\n    }\n  },\n)\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius, borderRadiusObject },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n    borderRadiusObject,\n  )\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import { Path } from 'react-native-svg'\n\nexport const AnimatedSvgPath = Path\n","import React, { Component } from 'react'\nimport {\n  Animated,\n  Dimensions,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  TouchableWithoutFeedback,\n  ScaledSize,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\nimport { IStep, ValueXY } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\nimport { AnimatedSvgPath } from './AnimatedPath'\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  backdropColor: string\n  dismissOnPress?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: IStep\n  easing: (value: number) => number\n  stop: () => void\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst IS_WEB = Platform.OS !== 'web'\n\nexport class SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: string\n  rafID: number\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  windowDimensions: ScaledSize | null = null\n  firstPath: string | undefined\n\n  constructor(props: Props) {\n    super(props)\n\n    this.windowDimensions = Platform.select({\n      android: Dimensions.get('screen'),\n      default: Dimensions.get('window'),\n    })\n\n    this.firstPath = `M0,0H${this.windowDimensions.width}V${\n      this.windowDimensions.height\n    }H0V0ZM${this.windowDimensions.width / 2},${\n      this.windowDimensions.height / 2\n    } h 1 v 1 h -1 Z`\n\n    this.state = {\n      canvasSize: {\n        x: this.windowDimensions.width,\n        y: this.windowDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: this.firstPath,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n        borderRadiusObject: currentStep?.borderRadiusObject,\n      },\n    })\n  }\n\n  animationListener = () => {\n    const d = this.getPath()\n    this.rafID = requestAnimationFrame(() => {\n      if (this.mask && this.mask.current) {\n        if (IS_WEB) {\n          // @ts-ignore\n          this.mask.current.setNativeProps({ d })\n        } else {\n          // @ts-ignore\n          this.mask.current._touchableNode.setAttribute('d', d)\n        }\n      }\n    })\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: false,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    const { dismissOnPress, stop } = this.props\n    const Wrapper: any = dismissOnPress ? TouchableWithoutFeedback : View\n\n    return (\n      <Wrapper\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        pointerEvents='none'\n        onPress={dismissOnPress ? stop : undefined}\n      >\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={this.firstPath}\n            opacity={this.state.opacity as any}\n            onPress={() => {}}\n          />\n        </Svg>\n      </Wrapper>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StatusBar,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native'\nimport { BorderRadiusObject, IStep, Labels, ValueXY } from '../types'\nimport styles, { MARGIN } from './style'\nimport { SvgMask } from './SvgMask'\nimport { Tooltip, TooltipProps } from './Tooltip'\n\ndeclare var __TEST__: boolean\n\nexport interface ModalProps {\n  ref: any\n  currentStep?: IStep\n  visible?: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  borderRadiusObject?: BorderRadiusObject\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  dismissOnPress?: boolean\n  easing: (value: number) => number\n  stop: () => void\n  next: () => void\n  prev: () => void\n  preventOutsideInteraction?: boolean\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n  tooltipTranslateY: Animated.Value\n  opacity: Animated.Value\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nexport class Modal extends React.Component<ModalProps, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n    isHorizontal: false,\n    preventOutsideInteraction: false,\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(400),\n    opacity: new Animated.Value(0),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: ModalProps) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: ModalProps) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n    }\n\n    const duration = this.props.animationDuration! + 200\n    const toValue =\n      verticalPosition === 'bottom'\n        ? tooltip.top\n        : obj.top -\n        MARGIN -\n        135 -\n        (this.props.currentStep!.tooltipBottomOffset || 0)\n    const translateAnim = Animated.timing(this.state.tooltipTranslateY, {\n      toValue,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    const opacityAnim = Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    this.state.opacity.setValue(0)\n    if (\n      // @ts-ignore\n      toValue !== this.state.tooltipTranslateY._value &&\n      !this.props.currentStep?.keepTooltipPosition\n    ) {\n      Animated.parallel([translateAnim, opacityAnim]).start()\n    } else {\n      opacityAnim.start()\n    }\n\n    this.setState({\n      tooltip,\n      layout,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        this._animateMove(obj as any).then(resolve),\n      )\n    })\n  }\n\n  reset() {\n    this.setState({\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  renderMask = () => (\n    <SvgMask\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n      dismissOnPress={this.props.dismissOnPress}\n      stop={this.props.stop}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent, visible } = this.props\n\n    if (!visible) {\n      return null\n    }\n\n    const { opacity } = this.state\n    return (\n      <Animated.View\n        pointerEvents='box-none'\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          {\n            zIndex: 99,\n            opacity,\n            transform: [{ translateY: this.state.tooltipTranslateY }],\n          },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>\n    )\n  }\n\n  renderNonInteractionPlaceholder() {\n    return this.props.preventOutsideInteraction ? <View\n      style={[StyleSheet.absoluteFill, styles.nonInteractionPlaceholder]} /> : null\n  }\n\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n\n\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderNonInteractionPlaceholder()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import mitt, { Emitter } from 'mitt'\nimport * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { TourGuideContext, Ctx } from './TourGuideContext'\nimport { useIsMounted } from '../hooks/useIsMounted'\nimport { IStep, Labels, StepObject, Steps } from '../types'\nimport * as utils from '../utilities'\nimport { Modal } from './Modal'\nimport { OFFSET_WIDTH } from './style'\nimport { TooltipProps } from './Tooltip'\n\nconst { useMemo, useEffect, useState, useRef } = React\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\nexport interface TourGuideProviderProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  startAtMount?: string | boolean\n  backdropColor?: string\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n  children: React.ReactNode\n  dismissOnPress?: boolean\n  preventOutsideInteraction?: boolean\n}\n\nexport const TourGuideProvider = ({\n  children,\n  wrapperStyle,\n  labels,\n  tooltipComponent,\n  tooltipStyle,\n  androidStatusBarVisible,\n  backdropColor,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n  verticalOffset,\n  startAtMount = false,\n  dismissOnPress = false,\n  preventOutsideInteraction = false,\n}: TourGuideProviderProps) => {\n  const [tourKey, setTourKey] = useState<string | '_default'>('_default')\n  const [visible, updateVisible] = useState<Ctx<boolean | undefined>>({\n    _default: false,\n  })\n  const setVisible = (key: string, value: boolean) =>\n    updateVisible((visible) => {\n      const newVisible = { ...visible }\n      newVisible[key] = value\n      return newVisible\n    })\n  const [currentStep, updateCurrentStep] = useState<Ctx<IStep | undefined>>({\n    _default: undefined,\n  })\n  const [steps, setSteps] = useState<Ctx<Steps>>({ _default: [] })\n\n  const [canStart, setCanStart] = useState<Ctx<boolean>>({ _default: false })\n\n  const startTries = useRef<number>(0)\n  const { current: mounted } = useIsMounted()\n\n  const { current: eventEmitter } = useRef<Ctx<Emitter>>({\n    _default: new mitt(),\n  })\n\n  const modal = useRef<any>()\n\n  useEffect(() => {\n    if (mounted && visible[tourKey] === false) {\n      eventEmitter[tourKey]?.emit('stop')\n    }\n  }, [visible])\n\n  useEffect(() => {\n    if (visible[tourKey] || currentStep[tourKey]) {\n      moveToCurrentStep(tourKey)\n    }\n  }, [visible, currentStep])\n\n  useEffect(() => {\n    if (mounted) {\n      if (steps[tourKey]) {\n        if (\n          (Array.isArray(steps[tourKey]) && steps[tourKey].length > 0) ||\n          Object.entries(steps[tourKey]).length > 0\n        ) {\n          setCanStart((obj) => {\n            const newObj = { ...obj }\n            newObj[tourKey] = true\n            return newObj\n          })\n          if (typeof startAtMount === 'string') {\n            start(startAtMount)\n          } else if (startAtMount) {\n            start('_default')\n          }\n        } else {\n          setCanStart((obj) => {\n            const newObj = { ...obj }\n            newObj[tourKey] = false\n            return newObj\n          })\n        }\n      }\n    }\n  }, [mounted, steps])\n\n  const moveToCurrentStep = async (key: string) => {\n    const size = await currentStep[key]?.target.measure()\n    if (\n      isNaN(size.width) ||\n      isNaN(size.height) ||\n      isNaN(size.x) ||\n      isNaN(size.y)\n    ) {\n      return\n    }\n    await modal.current?.animateMove({\n      width: size.width + OFFSET_WIDTH,\n      height: size.height + OFFSET_WIDTH,\n      left: Math.round(size.x) - OFFSET_WIDTH / 2,\n      top: Math.round(size.y) - OFFSET_WIDTH / 2 + (verticalOffset || 0),\n    })\n  }\n\n  const setCurrentStep = (key: string, step?: IStep) =>\n    new Promise<void>((resolve) => {\n      updateCurrentStep((currentStep) => {\n        const newStep = { ...currentStep }\n        newStep[key] = step\n        eventEmitter[key]?.emit('stepChange', step)\n        return newStep\n      })\n      resolve()\n    })\n\n  const getNextStep = (\n    key: string,\n    step: IStep | undefined = currentStep[key],\n  ) => utils.getNextStep(steps[key]!, step)\n\n  const getPrevStep = (\n    key: string,\n    step: IStep | undefined = currentStep[key],\n  ) => utils.getPrevStep(steps[key]!, step)\n\n  const getFirstStep = (key: string) => utils.getFirstStep(steps[key]!)\n\n  const getLastStep = (key: string) => utils.getLastStep(steps[key]!)\n\n  const isFirstStep = useMemo(() => {\n    const obj: Ctx<boolean> = {} as Ctx<boolean>\n    Object.keys(currentStep).forEach((key) => {\n      obj[key] = currentStep[key] === getFirstStep(key)\n    })\n    return obj\n  }, [currentStep])\n\n  const isLastStep = useMemo(() => {\n    const obj: Ctx<boolean> = {} as Ctx<boolean>\n    Object.keys(currentStep).forEach((key) => {\n      obj[key] = currentStep[key] === getLastStep(key)\n    })\n    return obj\n  }, [currentStep])\n\n  const _next = (key: string) => setCurrentStep(key, getNextStep(key)!)\n\n  const _prev = (key: string) => setCurrentStep(key, getPrevStep(key)!)\n\n  const _stop = (key: string) => {\n    setVisible(key, false)\n    setCurrentStep(key, undefined)\n  }\n\n  const registerStep = (key: string, step: IStep) => {\n    setSteps((previousSteps) => {\n      const newSteps = { ...previousSteps }\n      newSteps[key] = {\n        ...previousSteps[key],\n        [step.name]: step,\n      }\n      return newSteps\n    })\n    if (!eventEmitter[key]) {\n      eventEmitter[key] = new mitt()\n    }\n  }\n\n  const unregisterStep = (key: string, stepName: string) => {\n    if (!mounted) {\n      return\n    }\n    setSteps((previousSteps) => {\n      const newSteps = { ...previousSteps }\n      newSteps[key] = Object.entries(previousSteps[key] as StepObject)\n        .filter(([key]) => key !== stepName)\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {})\n      return newSteps\n    })\n  }\n\n  const getCurrentStep = (key: string) => currentStep[key]\n\n  const start = async (key: string, fromStep?: number) => {\n    const currentStep = fromStep\n      ? (steps[key] as StepObject)[fromStep]\n      : getFirstStep(key)\n\n    if (startTries.current > MAX_START_TRIES) {\n      startTries.current = 0\n      return\n    }\n    if (!currentStep) {\n      startTries.current += 1\n      requestAnimationFrame(() => start(key, fromStep))\n    } else {\n      eventEmitter[key]?.emit('start')\n      await setCurrentStep(key, currentStep!)\n      setVisible(key, true)\n      startTries.current = 0\n    }\n  }\n  const next = () => _next(tourKey)\n  const prev = () => _prev(tourKey)\n  const stop = () => _stop(tourKey)\n  return (\n    <View style={[styles.container, wrapperStyle]}>\n      <TourGuideContext.Provider\n        value={{\n          eventEmitter,\n          registerStep,\n          unregisterStep,\n          getCurrentStep,\n          start,\n          stop,\n          canStart,\n          setTourKey,\n        }}\n      >\n        {children}\n        <Modal\n          ref={modal}\n          {...{\n            next,\n            prev,\n            stop,\n            visible: visible[tourKey],\n            isFirstStep: isFirstStep[tourKey],\n            isLastStep: isLastStep[tourKey],\n            currentStep: currentStep[tourKey],\n            labels,\n            tooltipComponent,\n            tooltipStyle,\n            androidStatusBarVisible,\n            backdropColor,\n            animationDuration,\n            maskOffset,\n            borderRadius,\n            dismissOnPress,\n            preventOutsideInteraction,\n          }}\n        />\n      </TourGuideContext.Provider>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import * as React from 'react'\n\nexport const useIsMounted = () => {\n  const isMounted = React.useRef(false)\n  React.useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n  return isMounted\n}\n","import * as React from 'react'\nimport { TourGuideContext } from '../components/TourGuideContext'\nimport { TourGuideZone, TourGuideZoneProps } from '../components/TourGuideZone'\nimport {\n  TourGuideZoneByPosition,\n  TourGuideZoneByPositionProps,\n} from '../components/TourGuideZoneByPosition'\n\nexport const useTourGuideController = (tourKey?: string) => {\n  const { start, canStart, stop, eventEmitter, getCurrentStep, setTourKey } =\n    React.useContext(TourGuideContext)\n\n  const key = tourKey ?? '_default'\n\n  const _start = (fromStep?: number) => {\n    if (setTourKey) {\n      setTourKey(key)\n    }\n    if (start) {\n      start(key, fromStep)\n    }\n  }\n  const _stop = () => {\n    if (stop) {\n      stop(key)\n    }\n  }\n  const _eventEmitter = eventEmitter ? eventEmitter[key] : undefined\n  const _canStart = canStart ? canStart[key] : undefined\n  const _getCurrentStep = () => {\n    if (getCurrentStep) {\n      return getCurrentStep(key)\n    }\n    return undefined\n  }\n\n  React.useEffect(() => {\n    if (setTourKey) {\n      setTourKey(key)\n    }\n  }, [])\n\n  const KeyedTourGuideZone: React.FC<Omit<TourGuideZoneProps, 'tourKey'>> =\n    React.useCallback(\n      ({ children, ...rest }) => {\n        return (\n          <TourGuideZone {...rest} tourKey={key}>\n            {children}\n          </TourGuideZone>\n        )\n      },\n      [key],\n    )\n  const KeyedTourGuideZoneByPosition: React.FC<\n    Omit<TourGuideZoneByPositionProps, 'tourKey'>\n  > = React.useCallback(\n    (props) => {\n      return <TourGuideZoneByPosition {...props} tourKey={key} />\n    },\n    [key],\n  )\n\n  return {\n    start: _start,\n    stop: _stop,\n    eventEmitter: _eventEmitter,\n    getCurrentStep: _getCurrentStep,\n    canStart: _canStart,\n    tourKey: key,\n    TourGuideZone: KeyedTourGuideZone,\n    TourGuideZoneByPosition: KeyedTourGuideZoneByPosition,\n  }\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as React from 'react'\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native'\nimport {\n  TourGuideProvider,\n  TourGuideZone,\n  TourGuideZoneByPosition,\n  useTourGuideController,\n} from './src'\n\nconst uri =\n  'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg'\n\n// Add <TourGuideProvider/> at the root of you app!\nfunction App() {\n  return (\n    <TourGuideProvider {...{ borderRadius: 16, androidStatusBarVisible: true }}>\n      <AppContent />\n    </TourGuideProvider>\n  )\n}\n\nconst AppContent = () => {\n  const iconProps = { size: 40, color: '#888' }\n\n  // Use Hooks to control!\n  const { start, canStart, stop, eventEmitter } = useTourGuideController()\n\n  React.useEffect(() => {\n    // start at mount\n    if (canStart) {\n      start()\n    }\n  }, [canStart]) // wait until everything is registered\n\n  React.useEffect(() => {\n    eventEmitter.on('start', () => console.log('start'))\n    eventEmitter.on('stop', () => console.log('stop'))\n    eventEmitter.on('stepChange', () => console.log(`stepChange`))\n    return () => eventEmitter.off('*', null)\n  }, [])\n  return (\n    <View style={styles.container}>\n      {/* Use TourGuideZone only to wrap */}\n      <TourGuideZone\n        keepTooltipPosition\n        zone={2}\n        text={'A react-native-copilot remastered! 🎉'}\n        borderRadius={16}\n      >\n        <Text style={styles.title}>\n          {'Welcome to the demo of\\n\"rn-tourguide\"'}\n        </Text>\n      </TourGuideZone>\n      <View style={styles.middleView}>\n        <TouchableOpacity style={styles.button} onPress={() => start()}>\n          <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n        </TouchableOpacity>\n\n        <TourGuideZone zone={3} shape={'rectangle_and_keep'}>\n          <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n            <Text style={styles.buttonText}>Step 4</Text>\n          </TouchableOpacity>\n        </TourGuideZone>\n        <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n          <Text style={styles.buttonText}>Step 2</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={stop}>\n          <Text style={styles.buttonText}>Stop</Text>\n        </TouchableOpacity>\n        <TourGuideZone\n          zone={7}\n          shape='circle'\n          text={'With animated SVG morphing with awesome flubber 🍮💯'}\n        >\n          <Image source={{ uri }} style={styles.profilePhoto} />\n        </TourGuideZone>\n      </View>\n      <View style={styles.row}>\n        <TourGuideZone zone={4} shape={'circle'} tooltipBottomOffset={200}>\n          <Ionicons name='ios-add-circle' {...iconProps} />\n        </TourGuideZone>\n        <Ionicons name='ios-chatbubbles' {...iconProps} />\n        <Ionicons name='ios-globe' {...iconProps} />\n        <TourGuideZone zone={5}>\n          <Ionicons name='ios-navigate' {...iconProps} />\n        </TourGuideZone>\n        <TourGuideZone zone={6} shape={'circle'}>\n          <Ionicons name='ios-rainy' {...iconProps} />\n        </TourGuideZone>\n      </View>\n      <View\n        style={[\n          StyleSheet.absoluteFillObject,\n          {\n            top: 250,\n            left: 50,\n            width: 64,\n            height: 64,\n            backgroundColor: 'red',\n          },\n        ]}\n      />\n      {Platform.OS !== 'web' ? (\n        <TourGuideZoneByPosition\n          zone={1}\n          shape={'circle'}\n          isTourGuide\n          top={250}\n          left={50}\n          width={64}\n          height={64}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\nexport default App\n","import { StyleSheet, ViewStyle, TextStyle } from 'react-native'\n\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\n\nexport interface IStyle {\n  container: ViewStyle\n  tooltip: ViewStyle\n  tooltipText: TextStyle\n  tooltipContainer: ViewStyle\n  button: ViewStyle\n  buttonText: TextStyle\n  bottomBar: ViewStyle\n  overlayContainer: ViewStyle\n  nonInteractionPlaceholder: ViewStyle\n}\n\nexport default StyleSheet.create<IStyle>({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n    zIndex: Z_INDEX - 1,\n  },\n  nonInteractionPlaceholder: {\n    backgroundColor: 'transparent',\n    zIndex: Z_INDEX - 2,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","export { TourGuideZone, TourGuideZoneProps } from './components/TourGuideZone'\nexport { TourGuideProvider, TourGuideProviderProps } from './components/TourGuideProvider'\nexport { TourGuideContext, ITourGuideContext } from './components/TourGuideContext'\nexport { Tooltip, TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition, TourGuideZoneByPositionProps } from './components/TourGuideZoneByPosition'\nexport { useTourGuideController } from './hooks/useTourGuideController'\nexport * from './types'\n","import * as React from 'react'\nimport { IStep } from '../types'\n\nexport type Handler = (event?: any) => void\nexport interface Emitter {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, event?: any): void\n}\nexport type Ctx<T extends any> = Record<string, T> & { _default: T }\n\nexport interface ITourGuideContext {\n  setTourKey?: (tourKey: string) => void\n  eventEmitter?: Ctx<Emitter>\n  canStart: Ctx<boolean>\n  registerStep?(key: string, step: IStep): void\n  unregisterStep?(key: string, stepName: string): void\n  getCurrentStep?(key: string): IStep | undefined\n  start?(key: string, fromStep?: number): void\n  stop?(key: string): void\n}\n\nexport const TourGuideContext = React.createContext<ITourGuideContext>({\n  canStart: { _default: false },\n})\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ITourGuideContext } from './TourGuideContext'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  tourKey: string\n  active?: boolean\n  shape?: Shape\n  context: ITourGuideContext\n  children?: any\n  maskOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n  borderRadius?: number\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n}\n\nexport class ConnectedStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props.context && this.props.context.registerStep) {\n      this.props.context.registerStep(this.props.tourKey, {\n        target: this,\n        wrapper: this.wrapper,\n        ...this.props,\n      })\n    } else {\n      console.warn('context undefined')\n    }\n  }\n\n  unregister() {\n    if (this.props.context && this.props.context.unregisterStep) {\n      this.props.context.unregisterStep(this.props.tourKey, this.props.name)\n    } else {\n      console.warn('unregisterStep undefined')\n    }\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          const { borderRadius } = this.props\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x: borderRadius ? x + borderRadius : x,\n                y,\n                width: borderRadius ? width - borderRadius * 2 : width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          requestAnimationFrame(measure)\n        }\n      }\n\n      requestAnimationFrame(measure)\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => {}, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ConnectedStep } from './ConnectedStep'\nimport { TourGuideContext } from './TourGuideContext'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  tourKey: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n}\n\nexport const Step = (props: Props) => {\n  const context = React.useContext(TourGuideContext)\n  return <ConnectedStep {...{ ...props, context }} />\n}\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface WrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const Wrapper = ({ copilot, children, style }: WrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n","import * as React from 'react'\nimport { StyleProp, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { Step } from './Step'\nimport { Wrapper } from './Wrapper'\n\nexport interface TourGuideZoneProps {\n  zone: number\n  tourKey?: string\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n}\n\nexport const TourGuideZone = ({\n  isTourGuide = true,\n  tourKey = '_default',\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n  style,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  borderRadiusObject,\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <Step\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      {...{\n        tourKey,\n        shape,\n        maskOffset,\n        borderRadius,\n        keepTooltipPosition,\n        tooltipBottomOffset,\n        borderRadiusObject,\n      }}\n    >\n      <Wrapper {...{ style }}>{children}</Wrapper>\n    </Step>\n  )\n}\n","import * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { TourGuideZone } from './TourGuideZone'\n\nexport interface TourGuideZoneByPositionProps {\n  zone: number\n  tourKey?: string\n  isTourGuide?: boolean\n  top?: number | string\n  left?: number | string\n  right?: number | string\n  bottom?: number | string\n  width?: number | string\n  height?: number | string\n  shape?: Shape\n  borderRadiusObject?: BorderRadiusObject\n  containerStyle?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  text?: string\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  tourKey = '_default',\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  borderRadiusObject,\n  text,\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone\n        isTourGuide\n        {...{\n          tourKey,\n          zone,\n          shape,\n          keepTooltipPosition,\n          tooltipBottomOffset,\n          borderRadiusObject,\n          text,\n        }}\n        style={{\n          position: 'absolute',\n          height,\n          width,\n          top,\n          right,\n          bottom,\n          left,\n        }}\n      />\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nexport const Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} testID={'TourGuideButtonText'} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport { Button } from './Button'\nimport styles from './style'\nimport { IStep, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: IStep\n  labels?: Labels\n  handleNext?: () => void\n  handlePrev?: () => void\n  handleStop?: () => void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep && currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n"],"sourceRoot":""}